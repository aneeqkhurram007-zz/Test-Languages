[{"D:\\Projects\\Test\\React\\firebase_crud\\src\\index.js":"1","D:\\Projects\\Test\\React\\firebase_crud\\src\\reportWebVitals.js":"2","D:\\Projects\\Test\\React\\firebase_crud\\src\\App.js":"3","D:\\Projects\\Test\\React\\firebase_crud\\src\\components\\Contacts.js":"4","D:\\Projects\\Test\\React\\firebase_crud\\src\\components\\ContactForm.js":"5","D:\\Projects\\Test\\React\\firebase_crud\\src\\firebase.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":236,"mtime":1608014730508,"results":"10","hashOfConfig":"8"},{"size":3837,"mtime":1608059423435,"results":"11","hashOfConfig":"8"},{"size":3326,"mtime":1608048145534,"results":"12","hashOfConfig":"8"},{"size":535,"mtime":1608014831077,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13x634j",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\Projects\\Test\\React\\firebase_crud\\src\\index.js",[],["28","29"],"D:\\Projects\\Test\\React\\firebase_crud\\src\\reportWebVitals.js",[],"D:\\Projects\\Test\\React\\firebase_crud\\src\\App.js",[],"D:\\Projects\\Test\\React\\firebase_crud\\src\\components\\Contacts.js",["30","31","32"],"D:\\Projects\\Test\\React\\firebase_crud\\src\\components\\ContactForm.js",["33","34","35"],"import React, { useState, useEffect } from 'react';\r\nconst ContactForm = (props) => {\r\n\r\n    const initalFieldValues = {\r\n        fullName: '',\r\n        mobile: '',\r\n        email: '',\r\n        address: ''\r\n    }\r\n\r\n    var [values, setValues] = useState(initalFieldValues)\r\n\r\n    useEffect(() => {\r\n        if (props.contactId == '') {\r\n            setValues({\r\n                ...initalFieldValues\r\n            })\r\n\r\n        } else {\r\n            setValues({\r\n                ...props.contactObjetcs[props.contactId]\r\n            })\r\n        }\r\n    }, [props.contactId, props.contactObjetcs])\r\n\r\n    const handleInputChange = e => {\r\n        var { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        props.addOrEdit(values)\r\n    }\r\n    return (\r\n\r\n        <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fas fa-user\"></i>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <input className=\"form-control\" placeholder=\"Full Name\" name=\"fullName\"\r\n                    value={values.fullName}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-mobile-alt\"></i>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"Mobile\" name=\"mobile\"\r\n                        value={values.mobile} onChange={handleInputChange}\r\n\r\n\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"Email\" name=\"email\"\r\n                        value={values.email} onChange={handleInputChange}\r\n\r\n\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fas fa-home\"></i>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <textarea className=\"form-control\" placeholder=\"Address\" name=\"address\"\r\n                    value={values.address} onChange={handleInputChange}\r\n\r\n\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"submit\" value={props.contactId == '' ? \"Save\" : \"Update\"} calue=\"Save\" className=\"btn btn-primary btn-block\" />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default ContactForm;","D:\\Projects\\Test\\React\\firebase_crud\\src\\firebase.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":23,"column":23,"nodeType":"42","messageId":"43","endLine":23,"endColumn":25},{"ruleId":"44","severity":1,"message":"45","line":87,"column":45,"nodeType":"46","endLine":87,"endColumn":114},{"ruleId":"44","severity":1,"message":"45","line":90,"column":45,"nodeType":"46","endLine":90,"endColumn":109},{"ruleId":"40","severity":1,"message":"41","line":14,"column":29,"nodeType":"42","messageId":"43","endLine":14,"endColumn":31},{"ruleId":"47","severity":1,"message":"48","line":24,"column":8,"nodeType":"49","endLine":24,"endColumn":47,"suggestions":"50"},{"ruleId":"40","severity":1,"message":"41","line":102,"column":61,"nodeType":"42","messageId":"43","endLine":102,"endColumn":63},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initalFieldValues'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [initalFieldValues, props.contactId, props.contactObjetcs]",{"range":"56","text":"57"},[554,593],"[initalFieldValues, props.contactId, props.contactObjetcs]"]